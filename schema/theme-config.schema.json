{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "default": {},
  "type": "object",
  "properties": {
    "dependencies": {
      "description": "List of themes dependencies",
      "default": [],
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "selectors": {
      "description": "List of CSS selectors",
      "default": [],
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "color": {
      "description": "Color tokens",
      "default": {
        "base": [],
        "material": null,
        "generator": []
      },
      "type": "object",
      "properties": {
        "base": {
          "default": [],
          "description": "List of color records",
          "type": "array",
          "items": {
            "description": "Color record. Name to value",
            "type": "object",
            "propertyNames": {
              "description": "Color name",
              "allOf": [
                {
                  "$ref": "#/definitions/__schema0"
                }
              ]
            },
            "additionalProperties": {
              "anyOf": [
                {
                  "description": "Color value",
                  "type": "string"
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "description": "Color variant",
                    "allOf": [
                      {
                        "$ref": "#/definitions/__schema0"
                      }
                    ]
                  },
                  "additionalProperties": {
                    "description": "Color value",
                    "type": "string"
                  }
                }
              ]
            }
          }
        },
        "material": {
          "default": null,
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "source": {
                  "description": "Source color value",
                  "type": "string"
                },
                "disable": {
                  "description": "Disable generate specific color",
                  "default": {},
                  "type": "object",
                  "properties": {
                    "neutral": {
                      "default": false,
                      "type": "boolean"
                    },
                    "neutral-variant": {
                      "default": false,
                      "type": "boolean"
                    },
                    "primary": {
                      "default": false,
                      "type": "boolean"
                    },
                    "secondary": {
                      "default": false,
                      "type": "boolean"
                    },
                    "tertiary": {
                      "default": false,
                      "type": "boolean"
                    },
                    "error": {
                      "default": false,
                      "type": "boolean"
                    }
                  }
                },
                "overrides": {
                  "description": "Material color name overrides",
                  "default": {},
                  "type": "object",
                  "properties": {
                    "neutral": {
                      "default": "neutral",
                      "type": "string"
                    },
                    "neutral-variant": {
                      "default": "neutral-variant",
                      "type": "string"
                    },
                    "primary": {
                      "default": "primary",
                      "type": "string"
                    },
                    "secondary": {
                      "default": "secondary",
                      "type": "string"
                    },
                    "tertiary": {
                      "default": "tertiary",
                      "type": "string"
                    },
                    "error": {
                      "default": "critical",
                      "type": "string"
                    }
                  }
                },
                "customColors": {
                  "description": "Custom material colors",
                  "default": [],
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Color name",
                        "type": "string"
                      },
                      "value": {
                        "description": "Color value",
                        "type": "string"
                      },
                      "blend": {
                        "description": "Color blend",
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "required": ["name", "value"]
                  }
                }
              },
              "required": ["source"]
            },
            {
              "type": "null"
            }
          ]
        },
        "generator": {
          "default": [],
          "description": "List of color tokens generators",
          "type": "array",
          "items": {
            "description": "Custom color generator by name",
            "default": {},
            "type": "object",
            "propertyNames": {
              "description": "Color name",
              "allOf": [
                {
                  "$ref": "#/definitions/__schema0"
                }
              ]
            },
            "additionalProperties": {
              "type": "object",
              "properties": {
                "source": {
                  "description": "Source color value",
                  "type": "string"
                },
                "modifier": {
                  "description": "Generator modifiers",
                  "default": {},
                  "type": "object",
                  "properties": {
                    "min": {
                      "description": "Minimal token",
                      "default": 50,
                      "type": "number"
                    },
                    "max": {
                      "description": "Maximum token",
                      "default": 1000,
                      "type": "number"
                    },
                    "step": {
                      "description": "Step for token",
                      "default": 50,
                      "type": "number"
                    },
                    "reverse": {
                      "description": "Reverse colors",
                      "default": false,
                      "type": "boolean"
                    }
                  }
                }
              },
              "required": ["source"]
            }
          }
        }
      }
    },
    "radius": {
      "description": "Border Radius tokens",
      "default": [],
      "type": "array",
      "items": {
        "type": "object",
        "propertyNames": {
          "description": "Border radius name",
          "allOf": [
            {
              "$ref": "#/definitions/__schema0"
            }
          ]
        },
        "additionalProperties": {
          "anyOf": [
            {
              "description": "Border Radius value or reference like {radius.base}.\nSupport calculation like {radius.base} + 2px",
              "type": "string"
            },
            {
              "description": "Border Radius token generator",
              "type": "object",
              "properties": {
                "start": {
                  "description": "Start token",
                  "type": "number"
                },
                "end": {
                  "description": "End token",
                  "type": "number"
                },
                "step": {
                  "description": "Step token",
                  "default": 1,
                  "type": "number"
                },
                "namePattern": {
                  "description": "Name pattern",
                  "default": "{i}",
                  "type": "string"
                },
                "valuePattern": {
                  "description": "Value pattern",
                  "default": "{i}px",
                  "type": "string"
                }
              },
              "required": ["start", "end"]
            }
          ]
        }
      }
    },
    "spacing": {
      "description": "Spacing tokens",
      "default": [],
      "type": "array",
      "items": {
        "type": "object",
        "propertyNames": {
          "description": "Spacing name",
          "allOf": [
            {
              "$ref": "#/definitions/__schema0"
            }
          ]
        },
        "additionalProperties": {
          "anyOf": [
            {
              "description": "Spacing value or reference like {spacing.base}.\nSupport calculation like {spacing.base} + 2px",
              "type": "string"
            },
            {
              "description": "Spacing token generator",
              "type": "object",
              "properties": {
                "start": {
                  "description": "Start token",
                  "type": "number"
                },
                "end": {
                  "description": "End token",
                  "type": "number"
                },
                "step": {
                  "description": "Step token",
                  "default": 1,
                  "type": "number"
                },
                "namePattern": {
                  "description": "Name pattern",
                  "default": "{i}",
                  "type": "string"
                },
                "valuePattern": {
                  "description": "Value pattern",
                  "default": "{i}px",
                  "type": "string"
                }
              },
              "required": ["start", "end"]
            }
          ]
        }
      }
    },
    "font": {
      "description": "Font Family tokens",
      "default": [],
      "type": "array",
      "items": {
        "type": "object",
        "propertyNames": {
          "description": "Font Family name",
          "allOf": [
            {
              "$ref": "#/definitions/__schema0"
            }
          ]
        },
        "additionalProperties": {
          "description": "Font Family value or reference like {font.base}",
          "type": "string"
        }
      }
    },
    "fontWeight": {
      "description": "Font Weight tokens",
      "default": [],
      "type": "array",
      "items": {
        "type": "object",
        "propertyNames": {
          "description": "Font Weight name",
          "allOf": [
            {
              "$ref": "#/definitions/__schema0"
            }
          ]
        },
        "additionalProperties": {
          "description": "Font Weight value or reference like {font-weight.base}",
          "type": "string"
        }
      }
    },
    "leading": {
      "description": "Line Heights",
      "default": [],
      "type": "array",
      "items": {
        "type": "object",
        "propertyNames": {
          "description": "Line Height name",
          "allOf": [
            {
              "$ref": "#/definitions/__schema0"
            }
          ]
        },
        "additionalProperties": {
          "anyOf": [
            {
              "description": "Line Height value or reference like {leading.base}.\nSupport calculation like {leading.base} + 2px",
              "type": "string"
            },
            {
              "description": "Line Height generator",
              "type": "object",
              "properties": {
                "start": {
                  "description": "Start token",
                  "type": "number"
                },
                "end": {
                  "description": "End token",
                  "type": "number"
                },
                "step": {
                  "description": "Step token",
                  "default": 1,
                  "type": "number"
                },
                "namePattern": {
                  "description": "Name pattern",
                  "default": "{i}",
                  "type": "string"
                },
                "valuePattern": {
                  "description": "Value pattern",
                  "default": "{i}px",
                  "type": "string"
                }
              },
              "required": ["start", "end"]
            }
          ]
        }
      }
    },
    "text": {
      "description": "Spacing tokens",
      "default": [],
      "type": "array",
      "items": {
        "type": "object",
        "propertyNames": {
          "description": "Font Size name",
          "allOf": [
            {
              "$ref": "#/definitions/__schema0"
            }
          ]
        },
        "additionalProperties": {
          "anyOf": [
            {
              "description": "Font Size value or reference like {text.base}.\nSupport calculation like {text.base} + 2px",
              "type": "string"
            },
            {
              "description": "Font Size token generator",
              "type": "object",
              "properties": {
                "start": {
                  "description": "Start token",
                  "type": "number"
                },
                "end": {
                  "description": "End token",
                  "type": "number"
                },
                "step": {
                  "description": "Step token",
                  "default": 1,
                  "type": "number"
                },
                "namePattern": {
                  "description": "Name pattern",
                  "default": "{i}",
                  "type": "string"
                },
                "valuePattern": {
                  "description": "Value pattern",
                  "default": "{i}px",
                  "type": "string"
                }
              },
              "required": ["start", "end"]
            }
          ]
        }
      }
    },
    "tracking": {
      "description": "Letter Spacing tokens",
      "default": [],
      "type": "array",
      "items": {
        "type": "object",
        "propertyNames": {
          "description": "Letter Spacing name",
          "allOf": [
            {
              "$ref": "#/definitions/__schema0"
            }
          ]
        },
        "additionalProperties": {
          "description": "Letter Spacing value or reference like {tracking.base}.\nSupport calculation like {tracking.base} + 2px",
          "type": "string"
        }
      }
    },
    "typography": {
      "description": "Typography tokens",
      "default": [],
      "type": "array",
      "items": {
        "type": "object",
        "propertyNames": {
          "description": "Typography name",
          "allOf": [
            {
              "$ref": "#/definitions/__schema0"
            }
          ]
        },
        "additionalProperties": {
          "description": "Typography settings",
          "type": "object",
          "properties": {
            "font": {
              "description": "Font Family value or reference like {font.base}",
              "type": "string"
            },
            "fontWeight": {
              "description": "Font Weight value or reference like {font-weight.base}",
              "type": "string"
            },
            "leading": {
              "description": "Line Height value or reference like {leading.base}",
              "type": "string"
            },
            "text": {
              "description": "Font Size value or reference like {text.base}",
              "type": "string"
            },
            "tracking": {
              "description": "Letter Spacing value or reference like {tracking.base}",
              "type": "string"
            }
          },
          "required": ["font", "fontWeight", "leading", "text", "tracking"]
        }
      }
    }
  },
  "definitions": {
    "__schema0": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "number"
        }
      ]
    }
  }
}
